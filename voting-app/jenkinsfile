pipeline {
    agent any

    environment {
        // Define the path to the Docker Compose file
        COMPOSE_FILE = 'voting-app/docker-compose.yaml'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from the Git repository
                git 'https://github.com/s5wesley/voting-app1.git'
            }
        }

        stage('List Workspace Files') {
            steps {
                // List files to verify the docker-compose.yaml location
                sh 'ls -al voting-app'
            }
        }

        stage('Get External IP Address') {
            steps {
                script {
                    // Retrieve and print the external IP address
                    def ip = sh(script: 'curl -s ifconfig.io', returnStdout: true).trim()
                    echo "External IP Address: ${ip}"
                }
            }
        }

        stage('Build and Deploy') {
            steps {
                script {
                    // Ensure Docker is running and Docker Compose is available
                    sh 'docker --version'
                    sh 'docker-compose --version'

                    // Check for existing containers and decide whether to stop them
                    def containersExist = sh(script: "docker-compose -f ${env.COMPOSE_FILE} ps -q", returnStdout: true).trim()
                    if (containersExist) {
                        echo 'Stopping and removing existing containers and networks'
                        sh "docker-compose -f ${env.COMPOSE_FILE} down"
                    } else {
                        echo 'No existing containers found. Skipping docker-compose down.'
                    }

                    // Build and start the services in detached mode
                    sh "docker-compose -f ${env.COMPOSE_FILE} up --build -d"
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                script {
                    // Optionally, you can add some verification steps to ensure services are running correctly
                    sh "docker-compose -f ${env.COMPOSE_FILE} ps"
                }
            }
        }
    }

    post {
        always {
            // Clean up Docker containers and networks if needed
            sh "docker-compose -f ${env.COMPOSE_FILE} down"
        }
    }
}
